{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleDone","onToggleImportant","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","creteTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItem","search","doneCount","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.839c6322.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\n\r\nexport default AppHeader;\r\n","import React from 'react'\r\nimport './AppHeader.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>MY TODO LIST</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./SearchPanel\";\r\n\r\nexport default SearchPanel;\r\n","import React, {Component} from 'react'\r\nimport './SearchPanel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"ищи давай, пёс\"\r\n                   value={this.state.term}\r\n                   onChange={this.onSearchChange}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import TodoListItem from \"./TodoListItem\";\r\n\r\nexport default TodoListItem;\r\n","import React, {Component} from 'react'\r\nimport './TodoListItem.css'\r\n\r\nexport default class TodoListItem extends Component {\r\n    // constructor() {\r\n    //     super();\r\n    //     this.onLabelClick = () => {\r\n    //         console.log(`Done ${this.props.label}`);           //старый способ\r\n    //     };\r\n    //     this.state = {\r\n    //         done: false\r\n    //     }\r\n    // };\r\n\r\n    render() {\r\n        const {label, onDeleted, onToggleDone, onToggleImportant, important, done} = this.props;\r\n\r\n        let className = 'todo-list-item';\r\n        if (done) {\r\n            className += ' done';\r\n        }\r\n        if (important) {\r\n            className += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={className}>\r\n      <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n        {label}\r\n      </span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm float-right\"\r\n              onClick={onToggleImportant}>\r\n        <i className=\"fa fa-exclamation\"/>\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n      onClick={ onDeleted }>\r\n        <i className=\"fa fa-trash-o\"/>\r\n      </button>\r\n    </span>\r\n\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n","import TodoList from \"./TodoList\";\r\n\r\nexport default TodoList;\r\n","import React from 'react'\r\nimport TodoListItem from '../TodoListItem'\r\nimport './todoList.css'\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                              onDeleted= {() => onDeleted(id)}\r\n                              onToggleImportant={() => onToggleImportant(id)}\r\n                              onToggleDone={() => onToggleDone(id)}\r\n                />\r\n            </li>);\r\n    });\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from \"./ItemStatusFilter\";\r\n\r\nexport default ItemStatusFilter\r\n","import React, {Component} from 'react';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n        const { filter, onFilterChange } = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const inActive = filter === name;\r\n            const clazz = inActive? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                onClick={() =>onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n\r\n","import ItemAddForm from \"./ItemAddForm\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\n\r\nimport './ItemAddForm.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n                <input type=\"text\" className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"what to dooo...\"\r\n                       value={this.state.label}/>\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add item\r\n                </button>\r\n            </form>\r\n        )\r\n    };\r\n};","import App from './app'\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\n\r\nimport AppHeader from \"../AppHeader\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport TodoList from \"../TodoList\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter\"\r\nimport ItemAddForm from \"../ItemAddForm\"\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.creteTodoItem(\"drink Coffee\"),\r\n            this.creteTodoItem(\"eat pizza\"),\r\n            this.creteTodoItem(\"have fun\"),\r\n        ],\r\n        term: '',\r\n        filter: 'all'   //active, all, done\r\n    };\r\n\r\n    creteTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArr = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.creteTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n\r\n            const newArr = [\r\n                ...todoData, newItem\r\n            ];\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    toggleProperty(arr, id, propName) {                                                          //  отрефакторенный код\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n        return [\r\n            ...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)\r\n        ]\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            // const idx = todoData.findIndex((el) => el.id === id);                                  //не отрефакторенный код\r\n            // const oldItem = todoData[idx];\r\n            // const newItem = {...oldItem, done: !oldItem.done};\r\n            // const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n};\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n};\r\n    search(items, term) {                                                       //поиск\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItem = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                    onSearchChange ={this.onSearchChange}/>\r\n                    <ItemStatusFilter filter={this.state.filter}\r\n                    onFilterChange = {this.onFilterChange}/>\r\n                </div>\r\n                <TodoList todos={visibleItem}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/app';\r\n\r\n\r\n\r\nReactDom.render( <App />, document.getElementById('root'));\r\n"],"sourceRoot":""}